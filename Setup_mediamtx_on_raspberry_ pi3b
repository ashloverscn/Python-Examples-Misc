# Setup mediamtx on raspberry pi 3b +
https://james-batchelor.com/index.php/2023/11/10/install-mediamtx-on-raspbian-bookworm/
https://github.com/bluenviron/mediamtx
https://snapcraft.io/install/mediamtx/raspbian

# unit file 
[Unit]
Description=MediaMTX RTSP Server
After=network.target

[Service]
ExecStart=/usr/local/bin/mediamtx /opt/mediamtx/mediamtx.yml
Restart=always
User=pi

[Install]
WantedBy=multi-user.target

#
# configuration dir for /opt/mediamtx/mediamtx.yml

sudo apt install ffmpeg -y

# Stream a test Signal (takes a little longer than streaming raspi cam)
ffmpeg -re -f lavfi -i testsrc=size=640x480:rate=30 \
       -vcodec libx264 -preset veryfast -tune zerolatency \
       -f rtsp rtsp://localhost:8554/teststream

# Stream raspi cam
# 640 x 480
libcamera-vid -t 0 --inline --framerate 30 --width 640 --height 480 -o - | \
ffmpeg -re -f h264 -i - \
    -vcodec copy \
    -f rtsp rtsp://localhost:8554/teststream

# 1280 x 720
libcamera-vid -t 0 --inline --framerate 30 --width 1280 --height 720 -o - | \
ffmpeg -re -f h264 -i - \
    -vcodec copy \
    -f rtsp rtsp://localhost:8554/teststream

# read a Stream from url and write back the Stream to localhost mediamtx Server on a publish topic 
# (any topic you set becomes equally available on all the channels parallaly of the mediamtx Server)
# reading from remote camera and writing Stream to localhost mediamtx Server
ffmpeg -rtsp_transport tcp -i rtsp://admin:admin@192.168.29.141:5543/live/channel0 -c copy -f rtsp rtsp://localhost:8554/camera

# read and write the stream at Startup using mediamtx.yml file
paths:
  camera:
    source: publisher
    runOnInit: >
      ffmpeg -rtsp_transport tcp -i rtsp://admin:admin@192.168.29.141:5543/live/channel0
      -c copy -f rtsp rtsp://localhost:8554/camera
    runOnInitRestart: yes

# read and write the stream with wait untill feed available
paths:
  camera:
    source: publisher
    runOnInit: >
      bash -c 'until ffmpeg -rtsp_transport tcp -i rtsp://admin:admin@192.168.29.141:5543/live/channel0
      -c copy -f rtsp rtsp://localhost:8554/camera; do echo "Retrying..."; sleep 5; done'
    runOnInitRestart: no

# all parallal channels
# Great! MediaMTX is now running successfully on your Raspberry Pi 3B with all major streaming protocols enabled:

# RTSP: rtsp://raspberrypi:8554/

# RTMP: rtmp://raspberrypi:1935/

# HLS: http://raspberrypi:8888/

# WebRTC: http://raspberrypi:8889/

# SRT: srt://raspberrypi:8890

